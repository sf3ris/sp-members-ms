name: Deploy to Digital Ocean

on:
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Build project
        run: pip install --no-cache-dir -r docker/requirements.txt
      - name: Setup Environment
        run: |
          mv app/.env.example app/.env
          sed -i "s/:AUTH_SERVICE_HOST/${{ secrets.AUTH_HOST}}/g" app/.env
          sed -i "s/:HOST/172.21.0.2/g" app/.env
          sed -i "s/:USER/root/g" app/.env
          sed -i "s/:PASSWORD/${{ secrets.DB_PASS}}/g" app/.env
      - name: Upload project via ssh
        uses: appleboy/scp-action@master
        with:
          host: 159.65.125.31
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: "./"
          target: "/usr/src/ms_members/"
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: 159.65.125.31
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd /usr/src/members_microservice 2> /dev/null && docker-compose down;
            cd /usr/src/;
            rm members_microservice.old 2> /dev/null;
            ls -la ms_members;
            mv members_microservice members_microservice.old 2> /dev/null;
            mv ms_members members_microservice;
            cd members_microservice;
            docker-compose up -d --build --force-recreate;
